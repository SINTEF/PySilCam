# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SilCam.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_SilCam(object):
    def setupUi(self, SilCam):
        SilCam.setObjectName("SilCam")
        SilCam.resize(800, 641)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(SilCam.sizePolicy().hasHeightForWidth())
        SilCam.setSizePolicy(sizePolicy)
        SilCam.setWindowTitle("SilCam")
        SilCam.setStatusTip("")
        self.centralwidget = QtWidgets.QWidget(SilCam)
        self.centralwidget.setObjectName("centralwidget")
        SilCam.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(SilCam)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 27))
        self.menubar.setObjectName("menubar")
        self.menuTest = QtWidgets.QMenu(self.menubar)
        self.menuTest.setObjectName("menuTest")
        self.menuData = QtWidgets.QMenu(self.menubar)
        self.menuData.setObjectName("menuData")
        self.menuProcessed = QtWidgets.QMenu(self.menuData)
        self.menuProcessed.setObjectName("menuProcessed")
        self.menuAcquire = QtWidgets.QMenu(self.menubar)
        self.menuAcquire.setObjectName("menuAcquire")
        self.menuProcessing = QtWidgets.QMenu(self.menubar)
        self.menuProcessing.setEnabled(True)
        self.menuProcessing.setObjectName("menuProcessing")
        SilCam.setMenuBar(self.menubar)
        self.infoWidget = QtWidgets.QDockWidget(SilCam)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.infoWidget.sizePolicy().hasHeightForWidth())
        self.infoWidget.setSizePolicy(sizePolicy)
        self.infoWidget.setMinimumSize(QtCore.QSize(100, 100))
        self.infoWidget.setFeatures(QtWidgets.QDockWidget.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetMovable)
        self.infoWidget.setObjectName("infoWidget")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.infoWidget.setWidget(self.dockWidgetContents)
        SilCam.addDockWidget(QtCore.Qt.DockWidgetArea(4), self.infoWidget)
        self.actionOpen = QtWidgets.QAction(SilCam)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExit = QtWidgets.QAction(SilCam)
        self.actionExit.setObjectName("actionExit")
        self.actionRaw = QtWidgets.QAction(SilCam)
        self.actionRaw.setObjectName("actionRaw")
        self.actionConfig = QtWidgets.QAction(SilCam)
        self.actionConfig.setObjectName("actionConfig")
        self.actionController = QtWidgets.QAction(SilCam)
        self.actionController.setObjectName("actionController")
        self.actionSave_Figure = QtWidgets.QAction(SilCam)
        self.actionSave_Figure.setObjectName("actionSave_Figure")
        self.actionLoadProcessed = QtWidgets.QAction(SilCam)
        self.actionLoadProcessed.setObjectName("actionLoadProcessed")
        self.actionVD_Time_series = QtWidgets.QAction(SilCam)
        self.actionVD_Time_series.setObjectName("actionVD_Time_series")
        self.actionExport_Time_series = QtWidgets.QAction(SilCam)
        self.actionExport_Time_series.setObjectName("actionExport_Time_series")
        self.actionSilc_viewer = QtWidgets.QAction(SilCam)
        self.actionSilc_viewer.setObjectName("actionSilc_viewer")
        self.menuTest.addAction(self.actionSave_Figure)
        self.menuTest.addAction(self.actionExit)
        self.menuProcessed.addAction(self.actionLoadProcessed)
        self.menuProcessed.addAction(self.actionVD_Time_series)
        self.menuProcessed.addAction(self.actionExport_Time_series)
        self.menuData.addAction(self.actionRaw)
        self.menuData.addAction(self.menuProcessed.menuAction())
        self.menuAcquire.addAction(self.actionConfig)
        self.menuAcquire.addAction(self.actionController)
        self.menuProcessing.addAction(self.actionSilc_viewer)
        self.menubar.addAction(self.menuTest.menuAction())
        self.menubar.addAction(self.menuData.menuAction())
        self.menubar.addAction(self.menuAcquire.menuAction())
        self.menubar.addAction(self.menuProcessing.menuAction())

        self.retranslateUi(SilCam)
        QtCore.QMetaObject.connectSlotsByName(SilCam)

    def retranslateUi(self, SilCam):
        _translate = QtCore.QCoreApplication.translate
        self.menuTest.setTitle(_translate("SilCam", "File"))
        self.menuData.setTitle(_translate("SilCam", "Data"))
        self.menuProcessed.setTitle(_translate("SilCam", "Processed"))
        self.menuAcquire.setTitle(_translate("SilCam", "Acquire"))
        self.menuProcessing.setTitle(_translate("SilCam", "Processing"))
        self.infoWidget.setWindowTitle(_translate("SilCam", "Info"))
        self.actionOpen.setText(_translate("SilCam", "Open"))
        self.actionExit.setText(_translate("SilCam", "Exit"))
        self.actionRaw.setText(_translate("SilCam", "Raw"))
        self.actionConfig.setText(_translate("SilCam", "Config"))
        self.actionController.setText(_translate("SilCam", "Controller"))
        self.actionSave_Figure.setText(_translate("SilCam", "Save Figure"))
        self.actionLoadProcessed.setText(_translate("SilCam", "Load"))
        self.actionVD_Time_series.setText(_translate("SilCam", "VD Time-series"))
        self.actionExport_Time_series.setText(_translate("SilCam", "Export VD Time-series"))
        self.actionSilc_viewer.setText(_translate("SilCam", "silc viewer"))

